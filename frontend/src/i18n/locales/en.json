{
  "common": {
    "login": "Login",
    "logout": "Logout",
    "register": "Register",
    "username": "Username",
    "email": "Email",
    "password": "Password",
    "submit": "Submit",
    "cancel": "Cancel",
    "save": "Save",
    "edit": "Edit",
    "delete": "Delete",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "welcome": "Welcome",
    "profile": "Profile",
    "dashboard": "Dashboard",
    "settings": "Settings",
    "language": "Language",
    "english": "English",
    "turkish": "Turkish"
  },
  "auth": {
    "loginTitle": "Sign In to Your Account",
    "loginSubtitle": "Enter your credentials to access the token rotation demo",
    "registerTitle": "Create New Account",
    "registerSubtitle": "Register to test our secure authentication system",
    "forgotPassword": "Forgot your password?",
    "noAccount": "Don't have an account?",
    "hasAccount": "Already have an account?",
    "signInHere": "Sign in here",
    "signUpHere": "Sign up here",
    "loginSuccess": "Login successful!",
    "registerSuccess": "Registration successful!",
    "logoutSuccess": "Logout successful!",
    "invalidCredentials": "Invalid username or password",
    "userExists": "User already exists",
    "loginError": "Login failed. Please try again.",
    "registerError": "Registration failed. Please try again.",
    "demoCredentials": "Demo Credentials",
    "demoUser": "Username: demo",
    "demoPass": "Password: password123"
  },
  "navigation": {
    "dashboard": "Dashboard",
    "profile": "Profile",
    "testProtected": "Test Protected",
    "tokenInfo": "Token Info",
    "documentation": "Documentation",
    "about": "About",
    "securityDemo": "Security Demo",
    "qrGenerate": "QR Generate",
    "qrScan": "QR Scan",
    "dataViewer": "Data Viewer"
  },
  "dashboard": {
    "title": "Authentication Dashboard", 
    "subtitle": "Secure Token Refresh Demo Application",
    "description": "This dashboard demonstrates a complete JWT authentication system with automatic token refresh for enhanced security.",
    "welcomeBack": "Welcome back",
    "jwtDemoTitle": "JWT Token Refresh Demo Dashboard",
    "accessToken": "Access Token",
    "expiresIn": "Expires In",
    "tokenRotation": "Token Refresh",
    "session": "Session",
    "tokenManagement": "Token Management",
    "manualRefresh": "Manual Refresh",
    "refreshing": "Refreshing...",
    "viewTokenDetails": "View Token Details",
    "testProtectedRoute": "Test Protected Route",
    "lastManualRefresh": "Last manual refresh",
    "userInformation": "User Information",
    "userId": "User ID",
    "accountCreated": "Account Created",
    "tokenFamily": "Token Family",
    "familyId": "Family ID",
    "rotationStatus": "Refresh Status",
    "tokenFamilyDesc": "Tokens with the same family ID are part of the same refresh chain. When one token is compromised, all tokens in the family are revoked.",
    "demoFeatures": "Demo Features",
    "autoTokenRefresh": "Automatic token refresh",
    "tokenRotationSecurity": "Token refresh security",
    "protectedRouteHandling": "Protected route handling",
    "realtimeTokenMonitoring": "Real-time token monitoring",
    "valid": "Valid",
    "expiringSoon": "Expiring Soon",
    "expired": "Expired",
    "unknown": "Unknown",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "active": "Active",
    "loading": "Loading...",
    "features": "Key Features",
    "feature1": "üîê Secure JWT Authentication",
    "feature1Desc": "Implementation of JSON Web Tokens for stateless authentication",
    "feature2": "üîÑ Automatic Token Refresh",
    "feature2Desc": "Refresh tokens are automatically rotated to prevent replay attacks",
    "feature3": "üõ°Ô∏è Token Family Security",
    "feature3Desc": "Token families ensure that compromised tokens can be completely revoked",
    "feature4": "üì± Session Management",
    "feature4Desc": "Comprehensive session tracking and management capabilities",
    "quickActions": "Quick Actions",
    "viewProfile": "View Profile",
    "testProtected": "Test Protected Route",
    "viewTokens": "View Token Information",
    "readDocs": "Read Documentation"
  },
  "profile": {
    "title": "User Profile",
    "subtitle": "Your account information and security details",
    "userInfo": "User Information",
    "userId": "User ID",
    "createdAt": "Account Created",
    "lastLogin": "Last Login",
    "never": "Never",
    "securityInfo": "Security Information",
    "sessionStatus": "Session Status",
    "active": "Active",
    "tokenExpiry": "Token Expires",
    "refreshAvailable": "Refresh Available",
    "accountActions": "Account Actions",
    "changePassword": "Change Password",
    "viewSessions": "View Active Sessions",
    "exportData": "Export Account Data"
  },
  "testProtected": {
    "title": "Protected Route Test",
    "subtitle": "This page demonstrates protected route functionality",
    "description": "This is a protected route that requires valid authentication. If you can see this page, your JWT token is valid and the authentication middleware is working correctly.",
    "howItWorks": "How It Works",
    "step1": "1. User authenticates with username/password",
    "step2": "2. Server generates JWT access token (15 min) and refresh token (7 days)",
    "step3": "3. Client stores tokens and includes access token in requests",
    "step4": "4. Middleware validates token on each protected request",
    "step5": "5. If access token expires, client automatically refreshes using refresh token",
    "step6": "6. Old refresh token is revoked and new token pair is issued (rotation)",
    "securityFeatures": "Security Features",
    "feature1": "Token expiration prevents long-term exposure",
    "feature2": "Refresh token rotation prevents replay attacks",
    "feature3": "Token family system allows complete revocation if compromise detected",
    "feature4": "Automatic cleanup of expired tokens",
    "currentToken": "Current Token Status",
    "userContext": "User Context from Token"
  },
  "tokenInfo": {
    "title": "Token Information",
    "subtitle": "Detailed JWT token analysis and debugging",
    "accessToken": "Access Token",
    "refreshToken": "Refresh Token",
    "tokenDetails": "Token Details",
    "tokenValue": "Token",
    "expiresAt": "Expires At",
    "isValid": "Is Valid",
    "tokenType": "Type",
    "claims": "Claims",
    "tokenFamily": "Token Family",
    "rotationEnabled": "Token Refresh Enabled",
    "yes": "Yes",
    "no": "No",
    "copyToken": "Copy Token",
    "refreshNow": "Refresh",
    "revokeToken": "Revoke Token",
    "debugInfo": "Debug Information",
    "warning": "‚ö†Ô∏è This page is for development and debugging purposes only. Never expose token details in production!",
    "explanation": "Token Explanation",
    "accessTokenExp": "Access tokens are short-lived (2 minutes) and used for API requests.",
    "refreshTokenExp": "Refresh tokens are long-lived (30 minutes) and used to obtain new access tokens.",
    "rotationExp": "When refresh is enabled, each refresh generates a new token pair and revokes the old refresh token.",
    "securityConfig": "Security Configuration",
    "tokenRotation": "Token Refresh",
    "howTokenRotationWorks": "How Token Refresh Works",
    "rotationStep1": "‚Ä¢ When you refresh a token, the old refresh token is invalidated",
    "rotationStep2": "‚Ä¢ A new access token and refresh token pair is generated",
    "rotationStep3": "‚Ä¢ All tokens share the same \"family ID\" for security tracking",
    "rotationStep4": "‚Ä¢ If a token replay attack is detected, the entire family is revoked",
    "valid": "Valid",
    "invalid": "Invalid"
  },
  "documentation": {
    "title": "Token Refresh Demo Documentation",
    "subtitle": "Complete guide to understanding JWT authentication with token refresh",
    "overview": "Overview",
    "overviewDesc": "This demo application showcases a complete JWT authentication system with automatic token rotation, designed to provide maximum security while maintaining a smooth user experience.",
    "whatIsTokenRotation": "What is Token Rotation?",
    "tokenRotationDesc": "Token rotation is a security mechanism where refresh tokens are automatically replaced with new ones each time they're used. This prevents replay attacks and limits the window of vulnerability if a token is compromised.",
    "architecture": "System Architecture",
    "architectureDesc": "The application follows a modern web architecture pattern:",
    "frontend": "Frontend (React + TypeScript)",
    "frontendDesc": "‚Ä¢ Single Page Application (SPA) built with React and TypeScript\n‚Ä¢ Zustand for state management\n‚Ä¢ Automatic token refresh handling\n‚Ä¢ Protected route implementation\n‚Ä¢ Responsive design with Tailwind CSS",
    "backend": "Backend (Go + Gin)",
    "backendDesc": "‚Ä¢ RESTful API built with Go and Gin framework\n‚Ä¢ JWT token generation and validation\n‚Ä¢ In-memory storage for demo purposes\n‚Ä¢ CORS configuration for frontend integration\n‚Ä¢ Comprehensive error handling",
    "security": "Security Features",
    "securityDesc": "The demo implements several security best practices:",
    "securityFeature1": "üîê Short-lived access tokens (15 minutes)",
    "securityFeature2": "üîÑ Automatic refresh token rotation",
    "securityFeature3": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Token families for complete revocation",
    "securityFeature4": "üßπ Automatic cleanup of expired tokens",
    "securityFeature5": "üõ°Ô∏è Protection against replay attacks",
    "securityFeature6": "üìù Comprehensive request logging",
    "tokenLifecycle": "Token Lifecycle",
    "lifecycleDesc": "Understanding how tokens work in this system:",
    "lifecycle1": "1. **Initial Authentication**: User provides credentials, server validates and issues token pair",
    "lifecycle2": "2. **Request Authorization**: Client includes access token in Authorization header for API requests",
    "lifecycle3": "3. **Token Validation**: Server validates token signature, expiration, and claims on each request",
    "lifecycle4": "4. **Automatic Refresh**: When access token expires, client automatically uses refresh token to get new pair",
    "lifecycle5": "5. **Token Rotation**: Old refresh token is revoked, new token pair is issued with same family ID",
    "lifecycle6": "6. **Family Revocation**: If compromise detected, entire token family can be revoked instantly",
    "apiEndpoints": "API Endpoints",
    "endpointsDesc": "Available API endpoints in the demo:",
    "publicEndpoints": "Public Endpoints",
    "protectedEndpoints": "Protected Endpoints",
    "debugEndpoints": "Debug Endpoints",
    "useCases": "Real-World Use Cases",
    "useCasesDesc": "This token rotation pattern is ideal for:",
    "useCase1": "üì± Mobile applications with long session requirements",
    "useCase2": "üåê Single Page Applications (SPAs)",
    "useCase3": "üîó API integrations requiring secure authentication",
    "useCase4": "üè¢ Enterprise applications with strict security requirements",
    "useCase5": "üí∞ Financial applications handling sensitive data",
    "useCase6": "üè• Healthcare systems with compliance requirements",
    "implementation": "Implementation Guide",
    "implDesc": "To implement similar functionality in your application:",
    "impl1": "1. Set up JWT library and configure signing keys",
    "impl2": "2. Implement user authentication and token generation",
    "impl3": "3. Create middleware for token validation",
    "impl4": "4. Implement refresh token storage and rotation logic",
    "impl5": "5. Add automatic token refresh on client side",
    "impl6": "6. Implement logout and token revocation",
    "bestPractices": "Best Practices",
    "practicesDesc": "Security recommendations for production use:",
    "practice1": "üîë Use strong, randomly generated signing keys",
    "practice2": "‚è∞ Keep access token expiry short (5-15 minutes)",
    "practice3": "üóÑÔ∏è Use secure storage for refresh tokens (database)",
    "practice4": "üîç Implement comprehensive logging and monitoring",
    "practice5": "üõ°Ô∏è Add rate limiting to authentication endpoints",
    "practice6": "üß™ Regular security testing and penetration testing"
  },
  "errors": {
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "notFound": "Page not found",
    "serverError": "Server error occurred",
    "networkError": "Network connection error",
    "tokenExpired": "Session expired. Please login again.",
    "invalidToken": "Invalid authentication token",
    "loginRequired": "Please login to continue"
  },
  "footer": {
    "copyright": "¬© 2025 Token Rotation Demo.",
    "builtWith": "Built with React, TypeScript, Go, and JWT",
    "github": "View on GitHub",
    "documentation": "Documentation",
    "security": "Security Guide"
  },
  "qrGeneration": {
    "title": "QR Code Generation",
    "subtitle": "Generate one-time use QR codes for secure mobile login",
    "userInfo": "User Information",
    "generate": "Generate QR Code",
    "generating": "Generating...",
    "generateInfo": "Click to create a new QR code for mobile login",
    "qrCode": "QR Code",
    "timeRemaining": "Time Remaining",
    "copy": "Copy Data",
    "copied": "Copied!",
    "download": "Download",
    "oneTimeUse": "‚Ä¢ One-time use only",
    "expiresIn": "‚Ä¢ Expires in",
    "minutes": "minutes",
    "scanToLogin": "‚Ä¢ Scan to login on mobile",
    "howToUse": "How to Use",
    "step1": "Generate a QR code (valid for 5 minutes)",
    "step2": "Open your mobile app and scan the QR code",
    "step3": "The app will automatically validate and login",
    "step4": "QR code becomes invalid after first use"
  },
  "qrScanner": {
    "title": "QR Code Scanner",
    "subtitle": "Scan QR codes to login securely on mobile devices",
    "startScanning": "Start Scanning",
    "stopScanning": "Stop Scanning",
    "orUploadImage": "Or upload an image containing QR code",
    "uploadImage": "Upload Image",
    "manualInput": "Manual Input",
    "enterQRData": "Enter QR code data manually",
    "validate": "Validate",
    "processing": "Processing...",
    "scanSuccess": "QR Code validated successfully!",
    "scanError": "QR Code validation failed",
    "howToUse": "How to Use",
    "step1": "Point your camera at the QR code",
    "step2": "Or upload an image containing the QR code",
    "step3": "The system will validate and authenticate you",
    "step4": "You'll be automatically logged in",
    "reset": "Reset Scanner"
  },
  "dataViewer": {
    "title": "Database Viewer",
    "subtitle": "Comprehensive view of all stored data and statistics",
    "lastUpdated": "Last Updated",
    "showData": "Show Sensitive Data",
    "hideData": "Hide Sensitive Data",
    "refresh": "Refresh Data",
    "searchPlaceholder": "Search users, tokens, or QR codes...",
    "overview": "Overview",
    "users": "Users",
    "tokens": "Tokens",
    "qrCodes": "QR Codes",
    "totalUsers": "Total Users",
    "activeTokens": "Active Tokens",
    "revokedTokens": "Revoked Tokens",
    "activeQRCodes": "Active QR Codes",
    "user": "User",
    "email": "Email",
    "createdAt": "Created At",
    "lastLogin": "Last Login",
    "token": "Token",
    "userId": "User ID",
    "family": "Family",
    "status": "Status",
    "expiresAt": "Expires At",
    "qrId": "QR ID",
    "revoked": "Revoked",
    "active": "Active",
    "used": "Used",
    "loading": "Loading...",
    "error": "Error loading data",
    "retry": "Retry"
  }
}
